drop table product;
drop table member;
drop table board;
drop table order_table;
drop table chat;
drop table receive;
drop table chat_content;
drop table animal;
drop table file_TABLE;
drop table hospital;
DROP TABLE BOARD_REPLY;
DROP TABLE RECOMMEND;
DROP TABLE LOST_ANIMAL;
DROP TABLE MYCAL;

DROP SEQUENCE RECOMMEND_NUM_SEQ;
DROP SEQUENCE PRODUCT_NUM_SEQ;
DROP SEQUENCE BOARD_NO_SEQ;
DROP SEQUENCE BOARD_FREE_NO_SEQ;
DROP SEQUENCE BOARD_NOTICE_SEQ;
DROP SEQUENCE BOARD_QNA_SEQ;
DROP SEQUENCE BOARD_DEC_SEQ;
DROP SEQUENCE BOARD_GROUPNO_SEQ;
DROP SEQUENCE BOARD_QNA_GROUPNO_SEQ;
DROP SEQUENCE ORDER_NUM_SEQ;
DROP SEQUENCE ORDER_GROUP_SEQ;
DROP SEQUENCE CHAT_NUM_SEQ;
DROP SEQUENCE ANIMAL_NO_SEQ;
DROP SEQUENCE FILE_NUM_SEQ;
DROP SEQUENCE HOSPITAL_NUM_SEQ;
DROP SEQUENCE REPLY_NO_SEQ;
DROP SEQUENCE REPLY_GROUPNO_SEQ;
DROP SEQUENCE LOST_NO_SEQ;
DROP SEQUENCE CAL_NO_SEQ;

CREATE SEQUENCE RECOMMEND_NUM_SEQ;
CREATE SEQUENCE PRODUCT_NUM_SEQ;
CREATE SEQUENCE BOARD_NO_SEQ;
CREATE SEQUENCE BOARD_FREE_NO_SEQ;
CREATE SEQUENCE BOARD_NOTICE_SEQ;
CREATE SEQUENCE BOARD_QNA_SEQ;
CREATE SEQUENCE BOARD_DEC_SEQ;
CREATE SEQUENCE BOARD_GROUPNO_SEQ;
CREATE SEQUENCE BOARD_QNA_GROUPNO_SEQ;
CREATE SEQUENCE ORDER_NUM_SEQ;
CREATE SEQUENCE ORDER_GROUP_SEQ;
CREATE SEQUENCE CHAT_NUM_SEQ;
CREATE SEQUENCE ANIMAL_NO_SEQ;
CREATE SEQUENCE FILE_NUM_SEQ;
CREATE SEQUENCE HOSPITAL_NUM_SEQ;
CREATE SEQUENCE REPLY_NO_SEQ;
CREATE SEQUENCE REPLY_GROUPNO_SEQ;
CREATE SEQUENCE LOST_NO_SEQ;
CREATE SEQUENCE CAL_NO_SEQ;
select * from product;
CREATE TABLE PRODUCT(
	PROD_NUM NUMBER PRIMARY KEY,
	PROD_NAME VARCHAR2(1000) NOT NULL,
	PROD_EXPLAIN VARCHAR2(2000) NOT NULL,
	PROD_SALE NUMBER,
	PROD_PRICE NUMBER NOT NULL,
	PROD_RECOMM NUMBER NOT NULL,
	PROD_STOCK NUMBER NOT NULL,
	PROD_CATEGORY VARCHAR2(1000) NOT NULL,
	PROD_IN NUMBER,
	PROD_OUT NUMBER,
	PROD_INDATE DATE,
	PROD_OUTDATE DATE,
	PROD_MFR VARCHAR2(100),
	PROD_CLIENT VARCHAR2(2000)
);
select * from product;
CREATE TABLE MEMBER(
	MEMBER_ID VARCHAR2(500) PRIMARY KEY,
	MEMBER_PASSWORD VARCHAR2(500) NOT NULL,
	MEMBER_NAME VARCHAR2(1000) NOT NULL,
	MEMBER_NICNAME VARCHAR2(1000) NOT NULL,
	MEMBER_EMAIL VARCHAR2(1000) NOT NULL,
	MEMBER_PHONE VARCHAR2(100) NOT NULL,
	MEMBER_ADDR VARCHAR2(2000) NOT NULL,
	MEMBER_GRADE VARCHAR2(500) NOT NULL,
	MEMBER_JOIN VARCHAR2(2) NOT NULL,
	MEMBER_ANIMAL VARCHAR2(2) NOT NULL,
	MEMBER_POINT NUMBER,
	MEMBER_DR_INFO VARCHAR2(1000),
	MEMBER_NOTIFY VARCHAR2(2) NOT NULL,
	CONSTRAINT MEMBER_MEMBER_JOIN_CHK CHECK(MEMBER_JOIN IN ('Y', 'N')),
	CONSTRAINT MEMBER_MEMBER_ANIMAL_CHK CHECK(MEMBER_ANIMAL IN ('Y', 'N')),
	CONSTRAINT MEMBER_MEMBER_NOTIFY_CHK CHECK(MEMBER_NOTIFY IN ('Y', 'N'))
);
select * from order_table;
SELECT o.ORDER_NUM, o.ORDER_DATE, o.ORDER_QUANTITY, o.ORDER_PRICE, o.ORDER_STEP, o.ORDER_PAY, o.order_group,o.prod_num, p.PROD_NAME, o.MEMBER_ID,f.file_new_name
		FROM ORDER_TABLE o, product p, file_table f
		WHERE o.MEMBER_ID = 'ks12'
		and o.prod_num = p.prod_num
		and p.prod_num = f.prod_num
		and o.order_step != '미결제'
		order by o.order_num desc;
update order_table set order_step='결제완료',order_group='1' where order_num = '2';
alter sequence PRODUCT_NUM_SEQ increment by +1;
select * from member;
CREATE TABLE BOARD(
	BOARD_NO NUMBER PRIMARY KEY,
	BOARD_FREE_NO NUMBER,
	BOARD_NOTICE_NO NUMBER,
	BOARD_QNA_NO NUMBER,
	BOARD_DEC_NO NUMBER,
	BOARD_TITLE VARCHAR2(1000) NOT NULL,
	BOARD_CONTENT VARCHAR2(2000) NOT NULL,
	BOARD_REGDATE DATE NOT NULL,
	BOARD_READCOUNT NUMBER NOT NULL,
	BOARD_GROUPNO NUMBER NOT NULL,
	BOARD_GROUPSEQ NUMBER NOT NULL,
	BOARD_TITLETAB NUMBER NOT NULL,
	BOARD_DELFLAG VARCHAR2(2) NOT NULL,
	BOARD_CATEGORY VARCHAR2(100) NOT NULL,
	MEMBER_ID VARCHAR2(500) NOT NULL,
 	CONSTRAINT BOARD_BOARD_DELFLAG_CHK CHECK (BOARD_DELFLAG IN ('Y','N')),
	CONSTRAINT BOARD_BOARD_CATEGORY_CHK CHECK (BOARD_CATEGORY IN ('F','N','Q','D')),
	CONSTRAINT BOARD_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
);

CREATE TABLE ORDER_TABLE(
	ORDER_NUM NUMBER PRIMARY KEY,
	ORDER_DATE DATE NOT NULL,
	ORDER_QUANTITY NUMBER NOT NULL,
	ORDER_PRICE NUMBER NOT NULL,
	ORDER_STEP VARCHAR2(100) NOT NULL,
	ORDER_PAY VARCHAR2(2) NOT NULL,
	ORDER_GROUP NUMBER NOT NULL,
	PROD_NUM NUMBER NOT NULL,
	MEMBER_ID VARCHAR2(500) NOT NULL,
	CONSTRAINT ORDER_TABLE_ORDER_STEP_CHK CHECK (ORDER_STEP IN ('미결제','결제완료','배송준비중','배송중','배송완료','취소요청')),
	CONSTRAINT ORDER_TABLE_ORDER_PAY_CHK CHECK (ORDER_PAY IN ('Y','N')),
	CONSTRAINT ORDER_TABLE_PROD_NUM_FK FOREIGN KEY (PROD_NUM) REFERENCES PRODUCT (PROD_NUM),
	CONSTRAINT ORDER_TABLE_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
);


CREATE TABLE CHAT (
	CH_NUM NUMBER NOT NULL,
	DOCTOR_ID VARCHAR2(500) NOT NULL,
	CH_DATE DATE NOT NULL,
	MEMBER_ID VARCHAR2(500) NOT NULL,
	CONSTRAINT CHAT_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
	CONSTRAINT CH_NUM_UK UNIQUE (CH_NUM),
	CONSTRAINT CHAT_PK PRIMARY KEY (DOCTOR_ID,MEMBER_ID)
);

CREATE TABLE RECEIVE(
	ORDER_NUM NUMBER PRIMARY KEY,
	RECEIVE_NAME VARCHAR2(20) NOT NULL,
	RECEIVE_ADDR VARCHAR2(20) NOT NULL,
	RECEIVE_PHONE VARCHAR2(20) NOT NULL,
	RECEIVE_MEMO VARCHAR2(300),
	CONSTRAINT RECEIVE_ORDER_NUM_FK FOREIGN KEY (ORDER_NUM) REFERENCES ORDER_TABLE (ORDER_NUM)
);

CREATE TABLE CHAT_CONTENT(
	CH_NUM NUMBER NOT NULL,
	MEMBER_NICNAME VARCHAR2(20) NOT NULL,
	CH_CONTENT VARCHAR2(4000) NOT NULL,
	CH_CONTENT_DATE DATE NOT NULL,
	CONSTRAINT CHAT_CONTENT_CH_NUM_FK FOREIGN KEY (CH_NUM) REFERENCES CHAT (CH_NUM)
);
select * from chat_content;
CREATE TABLE ANIMAL(
	ANIMAL_NO NUMBER PRIMARY KEY,
	ANIMAL_NAME VARCHAR2(100) NOT NULL,
	ANIMAL_GEN  VARCHAR2(2) NOT NULL,
	ANIMAL_TYPE VARCHAR2(500),
	ANIMAL_AGE NUMBER,
	ANIMAL_WEIGHT NUMBER,
	ANIMAL_UNQ VARCHAR2(2000),
	MEMBER_ID VARCHAR2(500) NOT NULL,
	CONSTRAINT ANIMAL_ANIMAL_GEN_CHK CHECK (ANIMAL_GEN IN ('M','F')),
	CONSTRAINT ANIMAL_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
);


CREATE TABLE FILE_TABLE(
	FILE_NUM NUMBER PRIMARY KEY,
	FILE_PATH VARCHAR2(500) NOT NULL,
	FILE_ORI_NAME VARCHAR2(500) NOT NULL,
	FILE_NEW_NAME VARCHAR2(500) NOT NULL,
	FILE_TYPE VARCHAR2(500) NOT NULL,
	FILE_DATE DATE NOT NULL,
	FILE_SIZE VARCHAR2(500) NOT NULL,
	MEMBER_ID VARCHAR2(500) NOT NULL,
	BOARD_NO NUMBER ,
	CH_NUM NUMBER,
	ANIMAL_NO NUMBER ,
	PROD_NUM,
	CONSTRAINT FILE_TALBE_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
	CONSTRAINT FILE_TABLE_BOARD_NO_FK FOREIGN KEY (BOARD_NO) REFERENCES BOARD (BOARD_NO),
	CONSTRAINT FILE_TABLE_CH_NUM_FK FOREIGN KEY (CH_NUM) REFERENCES CHAT (CH_NUM),
	CONSTRAINT FILE_TABLE_ANIMAL_NO_FK FOREIGN KEY (ANIMAL_NO) REFERENCES ANIMAL (ANIMAL_NO),
	CONSTRAINT FILE_TABLE_PROD_NUM_FK FOREIGN KEY (PROD_NUM) REFERENCES PRODUCT (PROD_NUM)
);
alter table file_table add prod_num number;
alter table file_table add constraint FILE_TABLE_PROD_NUM FOREIGN KEY (PROD_NUM) REFERENCES PRODUCT(PROD_NUM); 
select * from order_table;
select * from board;
delete from board where board_no ='4';
select * from lost_animal
select * from file_table; where member_id = 'test' and ch_num is null;
CREATE TABLE BOARD_REPLY (
	REPLY_NO NUMBER PRIMARY KEY,
	REPLY_GROUPNO NUMBER NOT NULL,
	REPLY_GROUPSEQ NUMBER NOT NULL,
	REPLY_TAB NUMBER NOT NULL,
	REPLY_DELFLAG VARCHAR2(2) NOT NULL,
	REPLY_CONTENT VARCHAR2(2000) NOT NULL,
	REPLY_REGDATE DATE NOT NULL,
	BOARD_NO NUMBER NOT NULL,
	REPLY_NICNAME VARCHAR2(1000) NOT NULL,
	CONSTRAINT BOARD_REPLY_REPLY_DELFLAG_CHK CHECK (REPLY_DELFLAG IN ('Y', 'N')),
	CONSTRAINT BOARD_REPLY_BOARD_NO_FK FOREIGN KEY (BOARD_NO) REFERENCES BOARD (BOARD_NO)
);

CREATE TABLE HOSPITAL(
	HOSPITAL_NUM NUMBER PRIMARY KEY,
	HOSPITAL_NAME VARCHAR2(500) NOT NULL,
	HOSPITAL_ADDR VARCHAR2(500) NOT NULL,
	HOSPITAL_PHONE VARCHAR2(100)
);
CREATE TABLE LOST_ANIMAL(
	LOST_NO NUMBER PRIMARY KEY,
	LOST_LAT NUMBER NOT NULL,
	LOST_LNG NUMBER NOT NULL,
	BOARD_NO NUMBER NOT NULL,
	CONSTRAINT LOST_ANIMAL_BOARD_NO_FK FOREIGN KEY (BOARD_NO) REFERENCES BOARD (BOARD_NO)
);
select * from product;
delete from lost_animal where lost_no='1';
CREATE TABLE MYCAL(
	CAL_NO NUMBER PRIMARY KEY,
	CAL_TITLE VARCHAR2(1000) NOT NULL,
	CAL_CONTENT VARCHAR2(4000),
	CAL_MDATE VARCHAR2(12) NOT NULL,
	CAL_REGDATE DATE NOT NULL,
	CAL_CHK VARCHAR2(10) NOT NULL,
	MEMBER_ID VARCHAR2(500) NOT NULL,
	CONSTRAINT MYCAL_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
	CONSTRAINT MYCAL_CAL_CHK_CK CHECK (CAL_CHK IN ('Y', 'N'))
);


delete from member where member_id = 'doctor5';
SELECT * FROM FILE_TABLE;
SELECT * FROM MEMBER;
select * from HOSPITAL;
delete from file_table where prod_num = '4';
update order_table set order_step = '결제완료' where member_id = 'test';
select * from  file_table;
where m.member_id = f.member_id
and board_no = '64';
select * from member;  dhksdn486  
select * from board;
select * from file_table;
SELECT * FROM ANIMAL;
delete from member where member_grade = '전문의';
select * from member where member_grade = '전문의';
select * from chat;
select * from CHAT_CONTENT order by ch_content_date;
update member set member_grade = '관리자' where member_id = 'admin';
select * from product;

select * from order_table;
update order_table set order_step = '결제완료' where order_num = '24';
update product set prod_category = 'outing' where prod_num = '46';

select max(order_group) as max_group from order_table;

update order_table set order_step = '결제완료' where order_num = '24';
insert into order_table
values(order_num_seq.nextval, sysdate, 1, 100, '미결제', 'N', order_group_seq.nextval, 1, 'test');


select * from product;
select count(*) from hospital order by hospital_num desc;
select * from member;  
select * from file_table;
select * from board order by board_no desc;
select * from mycal;

SELECT X.rnum, X.board_no,X.board_free_no,X.board_notice_no,X.board_qna_no,X.board_dec_no,
		X.board_title,X.board_content,X.board_regdate,X.board_readcount,
		X.board_groupno,X.board_groupseq,X.board_titletab,X.member_id
		FROM (
		SELECT ROWNUM AS rnum, A.board_no,A.board_free_no,A.board_notice_no,A.board_qna_no,A.board_dec_no,
		A.board_title,A.board_content,A.board_regdate,A.board_readcount,
		A.board_groupno,A.board_groupseq,A.board_titletab,A.member_id
		FROM (
		SELECT b.board_no,b.board_free_no,b.board_notice_no,b.board_qna_no,b.board_dec_no,
		b.board_title,b.board_content,b.board_regdate,b.board_readcount,
		b.board_groupno,b.board_groupseq,b.board_titletab,m.member_nicname as
		member_id
		FROM BOARD b, MEMBER m
		WHERE BOARD_CATEGORY = 'F'
		and m.member_id = b.member_id
		ORDER BY BOARD_REGDATE DESC
		) A
		WHERE ROWNUM <= 15
		) X
		WHERE X.rnum >= 1

		select
		b.rnum,b.hospital_num,b.hospital_name,b.hospital_addr,b.hospital_phone
		from
		(select rownum as rnum ,
		a.hospital_num,a.hospital_name,a.hospital_addr,a.hospital_phone
		from
		(select
		hospital_num,hospital_name,hospital_addr,hospital_phone
		from
		hospital
		order by hospital_num desc)a
		where rownum <=
		20)b
		where b.rnum >=
		11 
		SELECT DISTINCT * FROM BOARD WHERE BOARD_FREE_NO > 0 AND MEMBER_ID LIKE '%ss%'
select * from board where board_free_no > 0 and member_id like '%ss%' order by board_no;
select * from board where board_free_no > 0 and member_id like '%ss%' order by board_no;
select * from board where board_free_no > 0 and member_id like '%'||#member_id#||'%' order by board_no;
delete from member where member_id='1702707258'
SELECT FILE_NUM, FILE_PATH, FILE_ORI_NAME, FILE_NEW_NAME,
		FILE_TYPE, FILE_DATE, FILE_SIZE, MEMBER_ID, BOARD_NO, CH_NUM,
		ANIMAL_NO
		FROM FILE_TABLE
		WHERE BOARD_NO = '73'
SELECT  board_no
		FROM board 
		WHERE BOARD_FREE_NO > 0 AND MEMBER_ID LIKE '%ss%'
		order by board_no desc
select * from member;
--실종신고 위치 정보 받아오기
--마이페이지 캘린더
delete from member where member_id = 'gg'
delete from product where prod_num = '27';
select * from product;
alter sequence PRODUCT_NUM_SEQ increment by -1;
select * from order_table o, product p 
select * from file_table;
update product set prod_out = '1' , prod_outdate = sysdate where prod_num = '40';
CREATE TABLE RECOMMEND(
	MEMBER_NO NUMBER PRIMARY KEY,
	MEMBER_ID VARCHAR2(500) NOT NULL,
	RECOMMEND_FIRST NUMBER NOT NULL,
	RECOMMEND_SECOND NUMBER NOT NULL,
	RECOMMEND_THIRD NUMBER NOT NULL,
	RECOMMEND_FOURTH NUMBER NOT NULL,
	RECOMMEND_FIFTH NUMBER NOT NULL,
	CONSTRAINT RECOMMEND_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
	CONSTRAINT RECOMMEND_RECOMMEND_FIR_FK FOREIGN KEY (RECOMMEND_FIRST) REFERENCES PRODUCT (PROD_NUM),
	CONSTRAINT RECOMMEND_RECOMMEND_SEC_FK FOREIGN KEY (RECOMMEND_SECOND) REFERENCES PRODUCT (PROD_NUM),
	CONSTRAINT RECOMMEND_RECOMMEND_THI_FK FOREIGN KEY (RECOMMEND_THIRD) REFERENCES PRODUCT (PROD_NUM),
	CONSTRAINT RECOMMEND_RECOMMEND_FOU_FK FOREIGN KEY (RECOMMEND_FOURTH) REFERENCES PRODUCT (PROD_NUM),
	CONSTRAINT RECOMMEND_RECOMMEND_FIF_FK FOREIGN KEY (RECOMMEND_FIFTH) REFERENCES PRODUCT (PROD_NUM)
);
select * from recommend;
